"use strict";
console.log('==== Умовне розгалуження  ====');
console.log('====   JS IF ELSE & "?"   ====');
// Варіант 1
if (1 === "1") {
    console.log('TRUE');
} else {
    console.log('FALSE'); // очікуємо FALSE , тому , "строгий" оператор [ === ] визначає , що типи даних не дорівнюють.
}
// Варіант 2
if (5 == '5') {
    console.log('TRUE');
} else {
    console.log('FALSE'); // очікуємо TRUE , тому , "не строгий" оператор [ == ] конвертує типи даних , після чого перевіряє рівність.
}

// Варіант 3
let message = (92 > '11' && 58 < 100) ? 'TRUE' : 'FALSE'; // очікуємо TRUE, тому що в умові (92 > '11' && 58 < 100), яка виконається першою завдяки круглим дужкам -  ми  отримаємо TRUE. В результаті виконання трійничного оператора [ ? ] буде повернено перше значення після оператора, тобто "TRUE" в цьому випадку.
console.log(message);
// Варіант 4
if (0) {
    console.log('FALSE');
} else if (" ") {
    console.log('TRUE');// жодних дій не очікується
}
